Description

You are given a string S consisting of lowercase characters. Some of the characters are good and the rest are bad. A substring S[l..r] is a string SlSl+1…Sr. A substring S[l..r] is good if among the letters SlSl+1…Sr there are at most K bad ones. You have to find the number of distinct good substrings of the given string S. Two substrings S[l..r] and S[p..q] is distinct if their content is different S[l…r]≠S[p..q].


Input Format

The first line contains a string S. 1 ≤ |S| ≤ 3000.

The second line contains a binary string of length 26. ‘0’ means ith character is bad and ‘1’ means ith character is good.

The third line contains an integer K, 1 ≤ K ≤ |S|.

 


Output Format

For each test case print the number of distinct substrings having at most K bad characters.